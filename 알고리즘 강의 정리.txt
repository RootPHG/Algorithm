에디터들
-pycharm으로 python관리시 편리 (수업과 무관한 추천)
-visual studio code(visual studio와 다름, 수업과 무관한 추천)
-Sublime Text(수업때 사용)

-github sourcetree 추천

-visualizer 사용법 숙달


알고리즘의 표현 방식
-자연어
-의사코드
-플로우 차트
-특정 언어

일반적으로 알고리즘은 프로그래밍 언어와 유사한 의사코드(pseudo code) 표현

알고리즘 복잡도 표현법
-최악경우분석 (우선도↑)
-평균경우분석
-최선경우분석

복잡도의 점근적 표기
(입력 크기 n이 무한대로 커질 때의 복잡도를 간단히 표현하기 위해 사용하는 표기법)
-Big-Oh (상한)
-Big-Omega (하한)
-Theta (합계) - (업계에서 Big-Oh로 부름)

Big-Oh 표기
-점근적 상한

Big-Omega 표기
-점근적 하한 

Theta 표기
-Big-Oh와 Big-Omega에 동시에 만족
-최고차항에서 계수를 제거

바이너리 서치
(검색)
시퀀스(?) 서치
(검색)

/
/
/
/
/
/

삽입정렬의 특성
-삽입정렬은 거의 정렬된 입력에 대해서 다른 정렬 알고리즘보다 빠르다.
ex) 입력이 앞부분은 정렬되어 있고 뒷부분의 20%이하에 새 데이터가 있는경우
-이동량이 적은 데이터에 대해 성능이 좋다.
-퀵 정렬, 합병정렬에서 입력의 크기가 작아지면 삽입정렬을 사용한다.

쉘 정렬의 특성
-gap을 이용한 삽입정렬
-루프를 4중루프 혹은 3중루프로 구현
-시간복잡도는 정확하진 않지만 n^1.5정도이다.
-임베디드 시스템에서 주로 사용

파이썬에서 힙 구조 사용법
-import heapq
-heapq.heapify(자료를 힙구조로 변경)
-heapq.heappop(가장 작은수를 가져오고 나머지를 힙구조로 정리)

파이썬 모듈 사용법
import random as rnd
-모듈이름을 바꿔 사용 가능 ex) rnd.randint()
from random import randint
-모듈에 있는 이름을 가져와 사용 ex) randint()

모듈까지 설명 -  list_comprehension부터 시작하면 됨

